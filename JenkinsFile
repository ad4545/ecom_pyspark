pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: node
    image: adarsh7r/ecom-pytest:latest
    command:
    - cat
    tty: true
    securityContext:
      runAsUser: 0
"""
        }
    }
    environment {
        DOCKER_IMAGE = "adarsh7r/spark-app:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
    }
    stages {
        stage('Pyspark Test') {
            steps {
                container('node') {
                    sh 'pytest'
                }
            }
        }
        stage('Install docker') {
            steps {
                container('node') {
                    sh '''
                        set -eux
                        whoami
                        id
                        
                        # Update package index
                        apt-get update
                        
                        # Install prerequisites
                        apt-get install -y ca-certificates curl gnupg lsb-release
                        
                        # Add Docker's official GPG key
                        install -m 0755 -d /etc/apt/keyrings
                        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                        chmod a+r /etc/apt/keyrings/docker.gpg
                        
                        # Add Docker repository
                        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
                        
                        # Install Docker CLI
                        apt-get update
                        apt-get install -y docker-ce-cli
                        
                        docker --version
                    '''
                }
            }
        }
        stage('Build and Push') {
            steps {
                container('node') {
                    sh '''
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/aws-java-sdk-bundle-1.11.271.jar
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/bundle-2.0.0-preview-7.jar
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/bundle-2.32.7.jar
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/hadoop-aws-3.4.1.jar
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/snowflake-jdbc-3.13.21.jar
                        curl -O https://seven-robotics.s3.ap-south-1.amazonaws.com/spark-essentials/spark-snowflake_2.13-3.1.1.jar

                        docker build -t $DOCKER_IMAGE .

                       '''
                }
            }
        }

    }
}
