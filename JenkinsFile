pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: node
    image: adarsh7r/ecom-pytest:latest
    command:
    - cat
    tty: true
    securityContext:
      runAsUser: 0

    volumeMounts:  # Add this section
    - name: docker-socket
      mountPath: /var/run/docker.sock
  volumes:         # Add this section
    - name: docker-socket
      hostPath:
       path: /var/run/docker.sock  
"""
        }
    }
    stages {
        stage('Pyspark Test') {
            steps {
                container('node') {
                    sh 'pytest'
                }
            }
        }
        stage('Install docker') {
            steps {
                container('node') {
                    sh '''
                        set -eux
                        whoami
                        id
                        
                        # Update package index
                        apt-get update
                        
                        # Install prerequisites
                        apt-get install -y ca-certificates curl gnupg lsb-release
                        
                        # Add Docker's official GPG key
                        install -m 0755 -d /etc/apt/keyrings
                        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                        chmod a+r /etc/apt/keyrings/docker.gpg
                        
                        # Add Docker repository
                        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
                        
                        # Install Docker CLI
                        apt-get update
                        apt-get install -y docker-ce-cli
                        
                        docker --version
                    '''
                }
            }
        }
        stage('Build') {
            steps {
                container('node') {
                    sh '''
                        set -eux
                        whoami
                        id
                        
                        docker build -t spark-app:${BUILD_NUMBER} .
                    '''
                }
            }
        }
        
    }
}
